{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c85b8e0\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"list-wrap\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"info\"\n};\nconst _hoisted_4 = {\n  class: \"date\"\n};\nconst _hoisted_5 = [\"onClick\"];\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-trash\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = [_hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"list\",\n    tag: \"ul\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" <ul> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.items, (item, index) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: index,\n        class: \"shadow\"\n      }, [_createElementVNode(\"i\", {\n        class: _normalizeClass([\"fas fa-check-circle check-bt\", {\n          memoComplete: item.complete\n        }]),\n        onClick: $event => $setup.updateMemo(item, index)\n      }, null, 10\n      /* CLASS, PROPS */\n      , _hoisted_2), _createElementVNode(\"span\", {\n        class: _normalizeClass({\n          memoCompleteTxt: item.complete\n        })\n      }, _toDisplayString(item.memotitle), 3\n      /* TEXT, CLASS */\n      ), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n        class: \"icon\",\n        style: _normalizeStyle({\n          backgroundImage: 'url(' + require(`@/assets/images/${item.memoicon}`) + ')'\n        })\n      }, null, 4\n      /* STYLE */\n      ), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(item.memodate), 1\n      /* TEXT */\n      ), _createElementVNode(\"span\", {\n        class: \"remove-bt\",\n        onClick: $event => $setup.removeMemo(item.id, index)\n      }, _hoisted_7, 8\n      /* PROPS */\n      , _hoisted_5)])]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    )), _createCommentVNode(\" </ul> \")]),\n    _: 1\n    /* STABLE */\n\n  })]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;;EAcAA,KAAK,EAAC;;;EAQHA,KAAK,EAAC;;;;gEAEVC,oBAA4B,GAA5B,EAA4B;EAAzBD,KAAK,EAAC;AAAmB,CAA5B,EAAuB,IAAvB,EAAuB;AAAA;AAAvB;;oBAAAE;;uBAxBVC,oBA8BM,KA9BN,cA8BM,CA7BJC,aA4BkBC,gBA5BlB,EA4BkB;IA5BDC,IAAI,EAAC,MA4BJ;IA5BWC,GAAG,EAAC;EA4Bf,CA5BlB;sBACE,MAAa,CAAbC,6BAAa,qBACbL,oBAwBKM,SAxBL,EAwBK,IAxBL,EAwBKC,YAxBuBC,YAwBvB,EAxB4B,CAArBC,IAAqB,EAAfC,KAAe,KAAV;2BAAvBV,oBAwBK,IAxBL,EAwBK;QAxBqCW,GAAG,EAAED,KAwB1C;QAxBiDb,KAAK,EAAC;MAwBvD,CAxBL,GACEC,oBAIK,GAJL,EAIK;QAHHD,KAAK,mBAAC,8BAAD,EAA+B;UAAAe,cAEZH,IAAI,CAACI;QAFO,CAA/B,EAGF;QAFFC,OAAK,YAAEN,kBAAWC,IAAX,EAAiBC,KAAjB;MAEL,CAJL;;MAAA,eAMAZ,oBAEO,MAFP,EAEO;QAFAD,KAAK;UAAAkB,iBAAqBN,IAAI,CAACI;QAA1B;MAEL,CAFP,mBACKJ,IAAI,CAACO,UADV,EACmB;MAAA;MADnB,GAIAlB,oBAYM,KAZN,cAYM,CAXJA,oBAMQ,MANR,EAMQ;QALND,KAAK,EAAC,MAKA;QAJLoB,KAAK;oCAA8DC,OAAO,oBAAoBT,IAAI,CAACU,QAAQ,EAAjC,IAAiC;QAAtG;MAIA,CANR;;MAAA,CAWI,EAJJrB,oBAA6C,MAA7C,cAA6CsB,iBAAvBX,IAAI,CAACY,QAAkB,CAA7C,EAAmC;MAAA;MAAnC,CAII,EAHJvB,oBAEO,MAFP,EAEO;QAFDD,KAAK,EAAC,WAEL;QAFkBiB,OAAK,YAAEN,kBAAWC,IAAI,CAACa,EAAhB,EAAoBZ,KAApB;MAEzB,CAFP;;MAAA,aAGI,CAZN,EAXF;KAwBK,CAxBL;;IAAA,CADa,GA0BbL,8BA1Ba;;;;GADf,CA6BI,CA9BN","names":["class","_createElementVNode","_hoisted_6","_createElementBlock","_createVNode","_TransitionGroup","name","tag","_createCommentVNode","_Fragment","_renderList","$setup","item","index","key","memoComplete","complete","onClick","memoCompleteTxt","memotitle","style","require","memoicon","_toDisplayString","memodate","id"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\miniblog\\src\\components\\BlogList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n    <TransitionGroup name=\"list\" tag=\"ul\">\r\n      <!-- <ul> -->\r\n      <li v-for=\"(item, index) in items\" v-bind:key=\"index\" class=\"shadow\">\r\n        <i\r\n          class=\"fas fa-check-circle check-bt\"\r\n          @click=\"updateMemo(item, index)\"\r\n          :class=\"{ memoComplete: item.complete }\"\r\n        ></i>\r\n\r\n        <span :class=\"{ memoCompleteTxt: item.complete }\">\r\n          {{ item.memotitle }}\r\n        </span>\r\n\r\n        <div class=\"info\">\r\n          <span\r\n            class=\"icon\"\r\n            :style=\"{\r\n              backgroundImage:\r\n                'url(' + require(`@/assets/images/${item.memoicon}`) + ')',\r\n            }\"\r\n          ></span>\r\n          <span class=\"date\">{{ item.memodate }}</span>\r\n          <span class=\"remove-bt\" @click=\"removeMemo(item.id, index)\">\r\n            <i class=\"fas fa-trash\"></i>\r\n          </span>\r\n        </div>\r\n      </li>\r\n      <!-- </ul> -->\r\n    </TransitionGroup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\";\r\nimport { computed } from \"vue\";\r\n\r\nexport default {\r\n  setup() {\r\n    // vuex store 사용\r\n    const store = useStore();\r\n\r\n    store.dispatch(\"fetchGetMemo\");\r\n\r\n    const items = computed(() => store.getters.getMemoArr);\r\n\r\n    const removeMemo = (item, index) => {\r\n      // context.emit('removeitem', item, index);\r\n      // store.commit('DELETE_MEMO', {item, index})\r\n      store.dispatch(\"fetchDeleteMemo\", { item, index });\r\n    };\r\n\r\n    const updateMemo = (item, index) => {\r\n      // context.emit(\"updateitem\", item, index);\r\n      // store.commit('UPDATE_MEMO', {item, index})\r\n      store.dispatch(\"fetchUpdateMemo\", { item, index });\r\n    };\r\n\r\n    return {\r\n      removeMemo,\r\n      updateMemo,\r\n      items,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nli {\r\n  display: flex;\r\n  min-height: 50px;\r\n  line-height: 50px;\r\n  margin-top: 20px;\r\n  background-color: rgb(230, 251, 255);\r\n  border-radius: 5px;\r\n  padding-left: 20px;\r\n}\r\n\r\n.info {\r\n  margin-left: auto;\r\n  height: 50px;\r\n}\r\n\r\n.icon {\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-size: 30px 15px;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n.date {\r\n  position: relative;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  width: 50px;\r\n  color: rgb(65, 94, 138);\r\n  margin-left: 5px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n.remove-bt {\r\n  position: relative;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  width: 50px;\r\n  color: rgb(65, 94, 138);\r\n  margin-left: 5px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n\r\n.check-bt {\r\n  color: #62acde;\r\n  line-height: 50px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.memoComplete {\r\n  color: #b3adad;\r\n}\r\n\r\n.memoCompleteTxt {\r\n  color: #b3adad;\r\n  text-decoration: line-through;\r\n}\r\n/* 애니메이션 */\r\n.list-enter-active,\r\n.list-leave-active {\r\n  transition: all 0.5s ease;\r\n}\r\n.list-enter-from,\r\n.list-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(30px);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}